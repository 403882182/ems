<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jyw.student.mapper.StudentWriteGradeMapper">
  <resultMap id="BaseResultMap" type="com.jyw.model.StudentWriteGrade">
    <constructor>
      <idArg column="write_grade_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="student_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="staff_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="write_grade_subject" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="write_grade" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="write_grade_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="write_grade_note" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    write_grade_id, student_id, staff_id, write_grade_subject, write_grade, write_grade_time, 
    write_grade_note
  </sql>
  <select id="selectByExample" parameterType="com.jyw.model.StudentWriteGradeCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student_write_grade
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student_write_grade
    where write_grade_id = #{writeGradeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from student_write_grade
    where write_grade_id = #{writeGradeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jyw.model.StudentWriteGradeCriteria">
    delete from student_write_grade
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jyw.model.StudentWriteGrade">
    insert into student_write_grade (write_grade_id, student_id, staff_id, 
      write_grade_subject, write_grade, write_grade_time, 
      write_grade_note)
    values (#{writeGradeId,jdbcType=INTEGER}, #{studentId,jdbcType=INTEGER}, #{staffId,jdbcType=INTEGER}, 
      #{writeGradeSubject,jdbcType=VARCHAR}, #{writeGrade,jdbcType=VARCHAR}, #{writeGradeTime,jdbcType=TIMESTAMP}, 
      #{writeGradeNote,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jyw.model.StudentWriteGrade">
    insert into student_write_grade
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="writeGradeId != null">
        write_grade_id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="staffId != null">
        staff_id,
      </if>
      <if test="writeGradeSubject != null">
        write_grade_subject,
      </if>
      <if test="writeGrade != null">
        write_grade,
      </if>
      <if test="writeGradeTime != null">
        write_grade_time,
      </if>
      <if test="writeGradeNote != null">
        write_grade_note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="writeGradeId != null">
        #{writeGradeId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="staffId != null">
        #{staffId,jdbcType=INTEGER},
      </if>
      <if test="writeGradeSubject != null">
        #{writeGradeSubject,jdbcType=VARCHAR},
      </if>
      <if test="writeGrade != null">
        #{writeGrade,jdbcType=VARCHAR},
      </if>
      <if test="writeGradeTime != null">
        #{writeGradeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="writeGradeNote != null">
        #{writeGradeNote,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jyw.model.StudentWriteGradeCriteria" resultType="java.lang.Long">
    select count(*) from student_write_grade
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student_write_grade
    <set>
      <if test="record.writeGradeId != null">
        write_grade_id = #{record.writeGradeId,jdbcType=INTEGER},
      </if>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=INTEGER},
      </if>
      <if test="record.staffId != null">
        staff_id = #{record.staffId,jdbcType=INTEGER},
      </if>
      <if test="record.writeGradeSubject != null">
        write_grade_subject = #{record.writeGradeSubject,jdbcType=VARCHAR},
      </if>
      <if test="record.writeGrade != null">
        write_grade = #{record.writeGrade,jdbcType=VARCHAR},
      </if>
      <if test="record.writeGradeTime != null">
        write_grade_time = #{record.writeGradeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.writeGradeNote != null">
        write_grade_note = #{record.writeGradeNote,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student_write_grade
    set write_grade_id = #{record.writeGradeId,jdbcType=INTEGER},
      student_id = #{record.studentId,jdbcType=INTEGER},
      staff_id = #{record.staffId,jdbcType=INTEGER},
      write_grade_subject = #{record.writeGradeSubject,jdbcType=VARCHAR},
      write_grade = #{record.writeGrade,jdbcType=VARCHAR},
      write_grade_time = #{record.writeGradeTime,jdbcType=TIMESTAMP},
      write_grade_note = #{record.writeGradeNote,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jyw.model.StudentWriteGrade">
    update student_write_grade
    <set>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="staffId != null">
        staff_id = #{staffId,jdbcType=INTEGER},
      </if>
      <if test="writeGradeSubject != null">
        write_grade_subject = #{writeGradeSubject,jdbcType=VARCHAR},
      </if>
      <if test="writeGrade != null">
        write_grade = #{writeGrade,jdbcType=VARCHAR},
      </if>
      <if test="writeGradeTime != null">
        write_grade_time = #{writeGradeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="writeGradeNote != null">
        write_grade_note = #{writeGradeNote,jdbcType=VARCHAR},
      </if>
    </set>
    where write_grade_id = #{writeGradeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jyw.model.StudentWriteGrade">
    update student_write_grade
    set student_id = #{studentId,jdbcType=INTEGER},
      staff_id = #{staffId,jdbcType=INTEGER},
      write_grade_subject = #{writeGradeSubject,jdbcType=VARCHAR},
      write_grade = #{writeGrade,jdbcType=VARCHAR},
      write_grade_time = #{writeGradeTime,jdbcType=TIMESTAMP},
      write_grade_note = #{writeGradeNote,jdbcType=VARCHAR}
    where write_grade_id = #{writeGradeId,jdbcType=INTEGER}
  </update>
<resultMap id="GetstudentwritegradeBystaffidMap" type="com.jyw.model.StudentWriteGradeEx">
<id column="write_grade_id" property="writeGradeId" />
  <result column="student_id" property="studentId"/>
  <result column="staff_id" property="staffId"/>
  <result column="write_grade_subject" property="writeGradeSubject"/>
  <result column="write_grade" property="writeGrade"/>
  <result column="write_grade_time" property="writeGradeTime"/>
  <result column="write_grade_notewrite_grade_note" property="writeGradeNote"/>

  <association property="staffInfo" javaType="com.jyw.model.StaffInfo">
    <id column="staff_id" property="staffId"/>
    <result column="staff_name" property="staffName"/>
  </association>

  <association property="studentInfo" javaType="com.jyw.model.StudentInfo">
    <id column="student_id" property="studentId"/>
    <result column="student_name" property="studentName"/>
  </association>


</resultMap>

  <select id="Getstudentwritegrade" parameterType="com.jyw.model.StudentWriteGradeEx" resultMap="GetstudentwritegradeBystaffidMap">
    SELECT
student_write_grade.write_grade_id,
student_write_grade.student_id,
student_write_grade.staff_id,
student_write_grade.write_grade_subject,
student_write_grade.write_grade,
student_write_grade.write_grade_time,
student_write_grade.write_grade_note,
staff_info.staff_name,
student_info.student_name
FROM
student_write_grade
INNER JOIN staff_info ON student_write_grade.staff_id = staff_info.staff_id
INNER JOIN student_info ON student_info.staff_id = staff_info.staff_id
AND student_write_grade.student_id = student_info.student_id
<where>
  <if test="staffInfo !=null">
      <if test="staffInfo.staffId !=null and staffInfo.staffId !=0">
            AND  student_write_grade.staff_id=${staffInfo.staffId}
      </if>
  </if>
  <if test="studentInfo !=null">
    <if test="studentInfo.studentName !=null and studentInfo.studentName !=''">
            AND student_info.student_name LIKE '%${studentInfo.studentName}%'
    </if>
    <if test="studentInfo.studentId!=null">
      AND student_info.student_id=#{studentInfo.studentId}
    </if>
  </if>
</where>
  </select>

</mapper>